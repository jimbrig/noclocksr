[{"path":"http://docs.jimbrig.com/noclocksr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jimmy Briggs. Author, maintainer. Patrick Howard. Author, reviewer. Clocks, LLC. Funder, copyright holder.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Briggs J, Howard P (2024). noclocksr: Clocks Utilities Helpers. R package version 0.0.0.9000, https://github.com/jimbrig/noclocksr, http://docs.jimbrig.com/noclocksr/.","code":"@Manual{,   title = {noclocksr: No Clocks Utilities and Helpers},   author = {Jimmy Briggs and Patrick Howard},   year = {2024},   note = {R package version 0.0.0.9000,     https://github.com/jimbrig/noclocksr},   url = {http://docs.jimbrig.com/noclocksr/}, }"},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"No Clocks Utilities and Helpers","text":"can install development version noclocksr using preferred R package installation method:","code":"# pak pak::pak(\"noclocks/gmhleasr\")  # remotes remotes::install_github(\"noclocks/gmhleasr\")  # devtools devtools::install_github(\"noclocks/gmhleasr\")"},{"path":"http://docs.jimbrig.com/noclocksr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"No Clocks Utilities and Helpers","text":"© Clocks, LLC r format(Sys.Date(), \"%Y\")","code":"library(noclocksr) noclocksr:awesomefunction()"},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_d_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Configuration Sub-Directory Initialization — cfg_d_init","title":"Configuration Sub-Directory Initialization — cfg_d_init","text":"function initializes configuration sub-directory setup creating sub-directory: config.d/ root config/ directory house configuration files different environments purposes can merged together.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_d_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configuration Sub-Directory Initialization — cfg_d_init","text":"","code":"cfg_d_init(   path = here::here(\"inst/config\"),   configs = list(example = list(default = list(NULL))),   merge = TRUE,   ignore = TRUE,   overwrite = FALSE,   templates = FALSE,   include_encrypted = FALSE,   ... )"},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_d_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configuration Sub-Directory Initialization — cfg_d_init","text":"path Path configuration directory. Defaults inst/config. configs list configuration lists different environments purposes. list contain named lists configuration settings names represent used name configuration file. See details information examples. merge Merge configuration files config.d/ directory config.yml file? Defaults TRUE. ignore Add .gitignore config.d/ directory ignore generated configuration files? Default TRUE. overwrite Overwrite existing configuration files. Defaults FALSE. templates Create configuration template files configuration file? Defaults FALSE. include_encrypted Create encrypted configuration files configuration file? Defaults FALSE. ... Additional arguments passed functions.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_d_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configuration Sub-Directory Initialization — cfg_d_init","text":"Invisibly returns merged configuration settings.","code":""},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_encrypt.html","id":null,"dir":"Reference","previous_headings":"","what":"Configuration File Encryption/Decryption — cfg_encrypt","title":"Configuration File Encryption/Decryption — cfg_encrypt","text":"encrypt_cfg_file() encrypts configuration file using encryption key. decrypt_cfg_file() decrypts configuration file using encryption key.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_encrypt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configuration File Encryption/Decryption — cfg_encrypt","text":"","code":"encrypt_cfg_file(   cfg_file = Sys.getenv(\"R_CONFIG_FILE\", \"inst/config/config.yml\"),   key = \"NOCLOCKS_ENCRYPTION_KEY\",   overwrite = FALSE,   ... )  decrypt_cfg_file(   cfg_file = Sys.getenv(\"R_CONFIG_FILE\", \"inst/config/config.yml\"),   cfg_file_encrypted = .get_encrypted_cfg_file(cfg_file),   key = \"NOCLOCKS_ENCRYPTION_KEY\" )"},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_encrypt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configuration File Encryption/Decryption — cfg_encrypt","text":"cfg_file Path configuration file. Defaults R_CONFIG_FILE environment variable inst/config/config.yml. key name environment variable contains encryption key. Defaults NOCLOCKS_ENCRYPTION_KEY. overwrite Logical. Overwrite existing encrypted file. Defaults FALSE. Used encrypt_cfg_file() . ... Additional arguments passed functions. cfg_file_encrypted Path encrypted configuration file. Defaults cfg_file extension .encrypted.yml. (Used decrypt_cfg_file() ).","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_encrypt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configuration File Encryption/Decryption — cfg_encrypt","text":"encrypt_cfg_file() returns invisible 0. decrypt_cfg_file() returns invisible config::get().","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_encrypt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configuration File Encryption/Decryption — cfg_encrypt","text":"encrypt_cfg_file() function encrypts configuration file using encryption key. decrypt_cfg_file() function decrypts configuration file using encryption key.","code":""},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_hooks_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Configuration Encryption Git Hooks — cfg_hooks_init","title":"Initialize Configuration Encryption Git Hooks — cfg_hooks_init","text":"Initialize Configuration Encryption Git Hooks","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_hooks_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Configuration Encryption Git Hooks — cfg_hooks_init","text":"","code":"cfg_hooks_init(   cfg_file = Sys.getenv(\"R_CONFIG_FILE\", here::here(\"inst/config/config.yml\")),   overwrite = FALSE,   ... )"},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_hooks_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Configuration Encryption Git Hooks — cfg_hooks_init","text":"cfg_file Path config.yml overwrite Overwrite existing hooks ... Additional arguments passed functions","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Configuration Setup — cfg_init","title":"Initialize Configuration Setup — cfg_init","text":"function initializes configuration setup creating configuration file, encrypted configuration file, configuration template file. also sets R_CONFIG_FILE environment variable path configuration file.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Configuration Setup — cfg_init","text":"","code":"cfg_init(   path = here::here(\"inst/config\"),   cfg = list(default = list(NULL)),   cfg_file = \"config.yml\",   cfg_file_encrypted = \"config.encrypted.yml\",   cfg_file_template = \"config.template.yml\",   encryption_key_name = \"NOCLOCKS_ENCRYPTION_KEY\",   overwrite = FALSE,   symlink = TRUE,   ... )"},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Configuration Setup — cfg_init","text":"path Path configuration directory. Defaults inst/config. cfg list configuration settings. Defaults empty list. cfg_file Path configuration file. Defaults config.yml. cfg_file_encrypted Path encrypted configuration file. Defaults config.encrypted.yml. cfg_file_template Path configuration template file. Defaults config.template.yml. encryption_key_name name environment variable contains encryption key. Defaults NOCLOCKS_ENCRYPTION_KEY. overwrite Overwrite existing configuration files. Defaults FALSE. symlink Create symlink configuration file. Defaults TRUE. ... Additional arguments passed functions.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Configuration Setup — cfg_init","text":"Invisibly returns configuration settings.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/cfg_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Configuration Setup — cfg_init","text":"cfg_init() function creates following files: config.yml: configuration file containing configuration settings. config.encrypted.yml: encrypted configuration file. config.template.yml: configuration template file. .gitignore: gitignore file ignore configuration files. README.md: README file instructions use configuration files.","code":""},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/reference/create_cfg_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a config.template.yml from a config.yml — create_cfg_template","title":"Generate a config.template.yml from a config.yml — create_cfg_template","text":"function takes config.yml file input generates config.template.yml file replacing values specific placeholders like \"<APP_NAME>\", \"<API_KEY>\", etc., ensuring placeholders correctly quoted output YAML.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/create_cfg_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a config.template.yml from a config.yml — create_cfg_template","text":"","code":"create_cfg_template(input_file, output_file = NULL)"},{"path":"http://docs.jimbrig.com/noclocksr/reference/create_cfg_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a config.template.yml from a config.yml — create_cfg_template","text":"input_file path input config.yml file. output_file path generated config.template.yml file saved.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/create_cfg_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a config.template.yml from a config.yml — create_cfg_template","text":"None. function outputs template file specified location.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/create_cfg_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a config.template.yml from a config.yml — create_cfg_template","text":"","code":"generate_config_template(\"inst/config/config.yml\", \"inst/config/config.template.yml\") #> Error in generate_config_template(\"inst/config/config.yml\", \"inst/config/config.template.yml\"): could not find function \"generate_config_template\""},{"path":"http://docs.jimbrig.com/noclocksr/reference/document_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Document a Dataset — document_dataset","title":"Document a Dataset — document_dataset","text":"function generates roxygen2 skeleton documenting dataset.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/document_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document a Dataset — document_dataset","text":"","code":"document_dataset(   data_obj,   name = \"DATASET_NAME\",   description = \"DATASET_DESCRIPTION\",   source = \"DATASET_SOURCE\",   col_types = purrr::map_chr(data_obj, typeof),   col_descs = rep(\"COLUMN_DESCRIPTION\", length(names(data_obj))),   file = fs::path(\"R\", \"data.R\"),   append = TRUE,   overwrite = !append,   ... )"},{"path":"http://docs.jimbrig.com/noclocksr/reference/document_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document a Dataset — document_dataset","text":"data_obj (Required) dataset document. data.frame tibble. name (Optional) name dataset. Default DATASET_NAME provided. description (Optional) description dataset. Default DATASET_DESCRIPTION provided. source (Optional) source dataset. Default DATASET_SOURCE provided. col_types (Optional) character vector column types. Default types columns dataset. col_descs (Optional) character vector column descriptions. Default COLUMN_DESCRIPTION column. file (Optional) file write documentation . Default R/pkg_data.R. append (Optional) Append file exists. Default TRUE. FALSE, file overwritten, unless overwrite TRUE, function write file. overwrite (Optional) Overwrite file exists. Default FALSE. ... Additional arguments","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/document_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Document a Dataset — document_dataset","text":"Invisibly returns character string roxygen2 documentation skeleton dataset.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/document_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document a Dataset — document_dataset","text":"","code":"# Create a sample dataset data(mtcars)  # Temporary file for testing temp_file <- fs::path_temp(\"test_mtcars.R\")  # Call the function document_dataset(   mtcars,   name = \"mtcars\",   description = \"Motor Trend Car Road Tests\",   source = \"Henderson and Velleman (1981)\",   col_descs = c(     \"Miles per Gallon\",     \"Number of Cylinders\",     \"Displacement\",     \"Horsepower\",     \"Rear Axle Ratio\",     \"Weight (per 1000 lbs)\",     \"1/4 mile time\",     \"V/S\",     \"Transmission (0 = automatic, 1 = manual)\",     \"Number of forward gears\",     \"Number of carburetors\"   ),   file = temp_file,   overwrite = TRUE )  # View the contents of the file readLines(temp_file) #>  [1] \"#' mtcars\"                                                                  #>  [2] \"#'\"                                                                         #>  [3] \"#' @description\"                                                            #>  [4] \"#' Motor Trend Car Road Tests\"                                              #>  [5] \"#'\"                                                                         #>  [6] \"#' @source\"                                                                 #>  [7] \"#' Henderson and Velleman (1981)\"                                           #>  [8] \"#'\"                                                                         #>  [9] \"#' @format A data frame with 32 rows and 11 columns:\"                       #> [10] \"#' \\\\describe{\"                                                             #> [11] \"#'   \\\\item{\\\\code{mpg}}{double. Miles per Gallon.}\"                        #> [12] \"#'   \\\\item{\\\\code{cyl}}{double. Number of Cylinders.}\"                     #> [13] \"#'   \\\\item{\\\\code{disp}}{double. Displacement.}\"                           #> [14] \"#'   \\\\item{\\\\code{hp}}{double. Horsepower.}\"                               #> [15] \"#'   \\\\item{\\\\code{drat}}{double. Rear Axle Ratio.}\"                        #> [16] \"#'   \\\\item{\\\\code{wt}}{double. Weight (per 1000 lbs).}\"                    #> [17] \"#'   \\\\item{\\\\code{qsec}}{double. 1/4 mile time.}\"                          #> [18] \"#'   \\\\item{\\\\code{vs}}{double. V/S.}\"                                      #> [19] \"#'   \\\\item{\\\\code{am}}{double. Transmission (0 = automatic, 1 = manual).}\" #> [20] \"#'   \\\\item{\\\\code{gear}}{double. Number of forward gears.}\"                #> [21] \"#'   \\\\item{\\\\code{carb}}{double. Number of carburetors.}\"                  #> [22] \"#'}\"                                                                        #> [23] \"\\\"mtcars\\\"\"                                                                 #> [24] \"\""},{"path":"http://docs.jimbrig.com/noclocksr/reference/minify_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Minify CSS — minify_css","title":"Minify CSS — minify_css","text":"Minify CSS","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/minify_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minify CSS — minify_css","text":"","code":"minify_css(css)"},{"path":"http://docs.jimbrig.com/noclocksr/reference/minify_css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Minify CSS — minify_css","text":"css character vector CSS code","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/minify_css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Minify CSS — minify_css","text":"character vector minified CSS code","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/noclocksr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"noclocksr: No Clocks Utilities and Helpers — noclocksr-package","title":"noclocksr: No Clocks Utilities and Helpers — noclocksr-package","text":"Library created internal development Clocks.","code":""},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/reference/noclocksr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"noclocksr: No Clocks Utilities and Helpers — noclocksr-package","text":"Maintainer: Jimmy Briggs jimmy.briggs@jimbrig.com (ORCID) Authors: Patrick Howard patrick.howard@noclocks.dev (ORCID) [reviewer] contributors: Clocks, LLC dev@noclocks.dev [funder, copyright holder]","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Debug Button — shiny_debug_button","title":"Shiny Debug Button — shiny_debug_button","text":"Shiny Module creates special DEBUG button toggle browser() function Shiny application. shiny_debug_button_ui(): Creates UI Shiny Debug Button. shiny_debug_button_server(): Handles server-side logic Shiny Debug Button.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Debug Button — shiny_debug_button","text":"","code":"shiny_debug_button_ui(   id = \"browser\",   label = \"Debug\",   icon = shiny::icon(\"bug\"),   hide = TRUE,   keyboard_shortcut = \"Ctrl + Alt + D\" )  shiny_debug_button_server(id = \"browser\")"},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Debug Button — shiny_debug_button","text":"id ID button. Default browser. label label button. icon icon use button. Default bug icon. hide Whether hide button default. Default TRUE. keyboard_shortcut keyboard shortcut toggle button's visibility. Default Ctrl + Alt + D.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Debug Button — shiny_debug_button","text":"UI element containing hidden button associated JavaScript.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny Debug Button — shiny_debug_button","text":"shiny_debug_button_ui function creates hidden button Shiny UI can toggled run browser() function. shiny_debug_button_server function contains server-side logic handle button's functionality. function creates button can used toggle browser() function Shiny application. button hidden default can toggled pressing keyboard shortcut Ctrl + Alt + D (whatever user specifies via keyboard_shortcut argument).","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Shiny Debug Button — shiny_debug_button","text":"shiny_debug_button_ui Creates button UI. shiny_debug_button_server Handles server-side logic.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/shiny_debug_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny Debug Button — shiny_debug_button","text":"","code":"# launch a shiny app with an interactive debug button # that can be toggled on and off via keyboard shortcut # the default keyboard shortcut is Ctrl + Alt + D:  if (interactive()) {    library(shiny)    ui <- fluidPage(     shiny_debug_button_ui(id = \"browser_btn\", label = \"Debug\")   )   server <- function(input, output, session) {     shiny_debug_button_server(\"browser_btn\")   }    shinyApp(ui, server)  }"},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny HTML Utilities — utils_html","title":"Shiny HTML Utilities — utils_html","text":"flucol(): Shiny Fluid Row + Column Layout icon_text(): Icon Text Create fluid row multiple columns. function wrapper around shiny::fluidRow() shiny::column(). allows creation multiple columns varying widths offsets, just shorthand shiny::fluidRow(shiny::column(width = 12, ...)). Create <span> tag containing icon text. Useful displaying icons next text, typically labels titles.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny HTML Utilities — utils_html","text":"","code":"flucol(..., width = 12, offset = 0)  icon_text(icon, text)"},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny HTML Utilities — utils_html","text":"... Elements include within columns. can valid HTML tags Shiny UI elements. width Integer width use column offset Integer offset use column icon Either character string representing shiny icon shiny icon tag created shiny::icon(). character string provided, converted shiny icon tag. text Character string display next provided icon.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny HTML Utilities — utils_html","text":"flucol(): Returns shiny::fluidRow() wrapping shiny::column() containing provided UI elements icon_text(): Returns <span> tag containing provided icon text. Returns shiny::fluidRow() wrapping shiny::column() containing provided UI elements Returns <span> tag containing provided icon text.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny HTML Utilities — utils_html","text":"functions provide utility functions working HTML Shiny UI elements. designed simplify creation common UI elements layouts.","code":""},{"path":[]},{"path":"http://docs.jimbrig.com/noclocksr/reference/utils_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny HTML Utilities — utils_html","text":"","code":"flucol(   htmltools::tags$h1(\"Hello World!\") ) #> <div class=\"row\"> #>   <div class=\"col-sm-12\"> #>     <h1>Hello World!<\/h1> #>   <\/div> #> <\/div> # provide plain text icon icon_text(\"table\", \"Table\") |> htmltools::browsable()       Table  # provide shiny icon tag icon_text(shiny::icon(\"table\"), \"Table\") |> htmltools::browsable()       Table"},{"path":"http://docs.jimbrig.com/noclocksr/reference/validate_cfg.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Configuration — validate_cfg","title":"Validate Configuration — validate_cfg","text":"simple function validate configuration object uses config package.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/validate_cfg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Configuration — validate_cfg","text":"","code":"validate_cfg(cfg)"},{"path":"http://docs.jimbrig.com/noclocksr/reference/validate_cfg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Configuration — validate_cfg","text":"cfg Configuration object (list) validate","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/validate_cfg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Configuration — validate_cfg","text":"TRUE configuration valid, otherwise error thrown.","code":""},{"path":"http://docs.jimbrig.com/noclocksr/reference/validate_cfg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Configuration — validate_cfg","text":"function verifies configuration object list contains least 'default' configuration.","code":""}]
